{"version":3,"file":"kiwotigo.worker.js","sources":["../wasm_exec.js","../kiwotigo-wasm-bridge.mjs","../kiwotigo-unite-islands.mjs","../kiwotigo.worker.mjs"],"sourcesContent":["// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n(() => {\n\t// Map multiple JavaScript environments to a single common API,\n\t// preferring web standards over Node.js API.\n\t//\n\t// Environments considered:\n\t// - Browsers\n\t// - Node.js\n\t// - Electron\n\t// - Parcel\n\n\tif (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export Go (neither global, window nor self is defined)\");\n\t}\n\n\tif (!global.require && typeof require !== \"undefined\") {\n\t\tglobal.require = require;\n\t}\n\n\tif (!global.fs && global.require) {\n\t\tconst fs = require(\"fs\");\n\t\tif (Object.keys(fs) !== 0) {\n\t\t\tglobal.fs = fs;\n\t\t}\n\t}\n\n\tconst enosys = () => {\n\t\tconst err = new Error(\"not implemented\");\n\t\terr.code = \"ENOSYS\";\n\t\treturn err;\n\t};\n\n\tif (!global.fs) {\n\t\tlet outputBuf = \"\";\n\t\tglobal.fs = {\n\t\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\t\twriteSync(fd, buf) {\n\t\t\t\toutputBuf += decoder.decode(buf);\n\t\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\t\tif (nl != -1) {\n\t\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t\t}\n\t\t\t\treturn buf.length;\n\t\t\t},\n\t\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\t\tcallback(enosys());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\t\tcallback(null, n);\n\t\t\t},\n\t\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tclose(fd, callback) { callback(enosys()); },\n\t\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\t\tfstat(fd, callback) { callback(enosys()); },\n\t\t\tfsync(fd, callback) { callback(null); },\n\t\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tlink(path, link, callback) { callback(enosys()); },\n\t\t\tlstat(path, callback) { callback(enosys()); },\n\t\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\t\treaddir(path, callback) { callback(enosys()); },\n\t\t\treadlink(path, callback) { callback(enosys()); },\n\t\t\trename(from, to, callback) { callback(enosys()); },\n\t\t\trmdir(path, callback) { callback(enosys()); },\n\t\t\tstat(path, callback) { callback(enosys()); },\n\t\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\t\tunlink(path, callback) { callback(enosys()); },\n\t\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t\t};\n\t}\n\n\tif (!global.process) {\n\t\tglobal.process = {\n\t\t\tgetuid() { return -1; },\n\t\t\tgetgid() { return -1; },\n\t\t\tgeteuid() { return -1; },\n\t\t\tgetegid() { return -1; },\n\t\t\tgetgroups() { throw enosys(); },\n\t\t\tpid: -1,\n\t\t\tppid: -1,\n\t\t\tumask() { throw enosys(); },\n\t\t\tcwd() { throw enosys(); },\n\t\t\tchdir() { throw enosys(); },\n\t\t}\n\t}\n\n\tif (!global.crypto) {\n\t\tconst nodeCrypto = require(\"crypto\");\n\t\tglobal.crypto = {\n\t\t\tgetRandomValues(b) {\n\t\t\t\tnodeCrypto.randomFillSync(b);\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!global.performance) {\n\t\tglobal.performance = {\n\t\t\tnow() {\n\t\t\t\tconst [sec, nsec] = process.hrtime();\n\t\t\t\treturn sec * 1000 + nsec / 1000000;\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!global.TextEncoder) {\n\t\tglobal.TextEncoder = require(\"util\").TextEncoder;\n\t}\n\n\tif (!global.TextDecoder) {\n\t\tglobal.TextDecoder = require(\"util\").TextDecoder;\n\t}\n\n\t// End of polyfills for common API.\n\n\tconst encoder = new TextEncoder(\"utf-8\");\n\tconst decoder = new TextDecoder(\"utf-8\");\n\n\tglobal.Go = class {\n\t\tconstructor() {\n\t\t\tthis.argv = [\"js\"];\n\t\t\tthis.env = {};\n\t\t\tthis.exit = (code) => {\n\t\t\t\tif (code !== 0) {\n\t\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\t\tthis._resolveExitPromise = resolve;\n\t\t\t});\n\t\t\tthis._pendingEvent = null;\n\t\t\tthis._scheduledTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\tthis.mem.setUint32(addr + 0, v, true);\n\t\t\t\tthis.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t}\n\n\t\t\tconst getInt64 = (addr) => {\n\t\t\t\tconst low = this.mem.getUint32(addr + 0, true);\n\t\t\t\tconst high = this.mem.getInt32(addr + 4, true);\n\t\t\t\treturn low + high * 4294967296;\n\t\t\t}\n\n\t\t\tconst loadValue = (addr) => {\n\t\t\t\tconst f = this.mem.getFloat64(addr, true);\n\t\t\t\tif (f === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = this.mem.getUint32(addr, true);\n\t\t\t\treturn this._values[id];\n\t\t\t}\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tconst nanHead = 0x7FF80000;\n\n\t\t\t\tif (typeof v === \"number\" && v !== 0) {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.mem.setFloat64(addr, v, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (v === undefined) {\n\t\t\t\t\tthis.mem.setFloat64(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = this._values.length;\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t}\n\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\tlet typeFlag = 0;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase \"object\":\n\t\t\t\t\t\tif (v !== null) {\n\t\t\t\t\t\t\ttypeFlag = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\tthis.mem.setUint32(addr, id, true);\n\t\t\t}\n\n\t\t\tconst loadSlice = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t\t}\n\n\t\t\tconst loadSliceOfValues = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\tconst loadString = (addr) => {\n\t\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t\t}\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\tgo: {\n\t\t\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\n\t\t\t\t\t// func wasmExit(code int32)\n\t\t\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\t\t\tconst code = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tthis.exited = true;\n\t\t\t\t\t\tdelete this._inst;\n\t\t\t\t\t\tdelete this._values;\n\t\t\t\t\t\tdelete this._goRefCounts;\n\t\t\t\t\t\tdelete this._ids;\n\t\t\t\t\t\tdelete this._idPool;\n\t\t\t\t\t\tthis.exit(code);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\t\t\tconst n = this.mem.getInt32(sp + 24, true);\n\t\t\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func resetMemoryDataView()\n\t\t\t\t\t\"runtime.resetMemoryDataView\": (sp) => {\n\t\t\t\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func nanotime1() int64\n\t\t\t\t\t\"runtime.nanotime1\": (sp) => {\n\t\t\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func walltime1() (sec int64, nsec int32)\n\t\t\t\t\t\"runtime.walltime1\": (sp) => {\n\t\t\t\t\t\tconst msec = (new Date).getTime();\n\t\t\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\twhile (this._scheduledTimeouts.has(id)) {\n\t\t\t\t\t\t\t\t\t// for some reason Go failed to register the timeout event, log and try again\n\t\t\t\t\t\t\t\t\t// (temporary workaround for https://github.com/golang/go/issues/28975)\n\t\t\t\t\t\t\t\t\tconsole.warn(\"scheduleTimeoutEvent: missed timeout event\");\n\t\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t\t\t));\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, id, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tconst id = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func getRandomData(r []byte)\n\t\t\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t\"syscall/js.finalizeRef\": (sp) => {\n\t\t\t\t\t\tconst id = this.mem.getUint32(sp + 8, true);\n\t\t\t\t\t\tthis._goRefCounts[id]--;\n\t\t\t\t\t\tif (this._goRefCounts[id] === 0) {\n\t\t\t\t\t\t\tconst v = this._values[id];\n\t\t\t\t\t\t\tthis._values[id] = null;\n\t\t\t\t\t\t\tthis._ids.delete(v);\n\t\t\t\t\t\t\tthis._idPool.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\t\t\tconst result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t\"syscall/js.valueDelete\": (sp) => {\n\t\t\t\t\t\tReflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp(); // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\t\t\tthis.mem.setUint8(sp + 24, (loadValue(sp + 8) instanceof loadValue(sp + 16)) ? 1 : 0);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToGo\": (sp) => {\n\t\t\t\t\t\tconst dst = loadSlice(sp + 8);\n\t\t\t\t\t\tconst src = loadValue(sp + 32);\n\t\t\t\t\t\tif (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToJS\": (sp) => {\n\t\t\t\t\t\tconst dst = loadValue(sp + 8);\n\t\t\t\t\t\tconst src = loadSlice(sp + 16);\n\t\t\t\t\t\tif (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t\"debug\": (value) => {\n\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tthis._inst = instance;\n\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\tNaN,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tglobal,\n\t\t\t\tthis,\n\t\t\t];\n\t\t\tthis._goRefCounts = new Array(this._values.length).fill(Infinity); // number of references that Go has to a JS value, indexed by reference id\n\t\t\tthis._ids = new Map([ // mapping from JS values to reference ids\n\t\t\t\t[0, 1],\n\t\t\t\t[null, 2],\n\t\t\t\t[true, 3],\n\t\t\t\t[false, 4],\n\t\t\t\t[global, 5],\n\t\t\t\t[this, 6],\n\t\t\t]);\n\t\t\tthis._idPool = [];   // unused ids that have been garbage collected\n\t\t\tthis.exited = false; // whether the Go program has exited\n\n\t\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\t\tlet offset = 4096;\n\n\t\t\tconst strPtr = (str) => {\n\t\t\t\tconst ptr = offset;\n\t\t\t\tconst bytes = encoder.encode(str + \"\\0\");\n\t\t\t\tnew Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n\t\t\t\toffset += bytes.length;\n\t\t\t\tif (offset % 8 !== 0) {\n\t\t\t\t\toffset += 8 - (offset % 8);\n\t\t\t\t}\n\t\t\t\treturn ptr;\n\t\t\t};\n\n\t\t\tconst argc = this.argv.length;\n\n\t\t\tconst argvPtrs = [];\n\t\t\tthis.argv.forEach((arg) => {\n\t\t\t\targvPtrs.push(strPtr(arg));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst keys = Object.keys(this.env).sort();\n\t\t\tkeys.forEach((key) => {\n\t\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst argv = offset;\n\t\t\targvPtrs.forEach((ptr) => {\n\t\t\t\tthis.mem.setUint32(offset, ptr, true);\n\t\t\t\tthis.mem.setUint32(offset + 4, 0, true);\n\t\t\t\toffset += 8;\n\t\t\t});\n\n\t\t\tthis._inst.exports.run(argc, argv);\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t\tawait this._exitPromise;\n\t\t}\n\n\t\t_resume() {\n\t\t\tif (this.exited) {\n\t\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t\t}\n\t\t\tthis._inst.exports.resume();\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t}\n\n\t\t_makeFuncWrapper(id) {\n\t\t\tconst go = this;\n\t\t\treturn function () {\n\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n\t\t\t};\n\t\t}\n\t}\n\n\tif (\n\t\tglobal.require &&\n\t\tglobal.require.main === module &&\n\t\tglobal.process &&\n\t\tglobal.process.versions &&\n\t\t!global.process.versions.electron\n\t) {\n\t\tif (process.argv.length < 3) {\n\t\t\tconsole.error(\"usage: go_js_wasm_exec [wasm binary] [arguments]\");\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tconst go = new Go();\n\t\tgo.argv = process.argv.slice(2);\n\t\tgo.env = Object.assign({ TMPDIR: require(\"os\").tmpdir() }, process.env);\n\t\tgo.exit = process.exit;\n\t\tWebAssembly.instantiate(fs.readFileSync(process.argv[2]), go.importObject).then((result) => {\n\t\t\tprocess.on(\"exit\", (code) => { // Node.js exits if no event handler is pending\n\t\t\t\tif (code === 0 && !go.exited) {\n\t\t\t\t\t// deadlock, make Go print error and stack traces\n\t\t\t\t\tgo._pendingEvent = { id: 0 };\n\t\t\t\t\tgo._resume();\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn go.run(result.instance);\n\t\t}).catch((err) => {\n\t\t\tconsole.error(err);\n\t\t\tprocess.exit(1);\n\t\t});\n\t}\n})();\n","import \"./wasm_exec.js\";\n\nconst go = new Go();\nconst __kiwotiGo = WebAssembly.instantiateStreaming(\n  fetch(\"kiwotigo.wasm\"),\n  go.importObject\n).then((result) => {\n  go.run(result.instance);\n});\n\nexport const DefaultConfig = {\n  gridWidth: 10,\n  gridHeight: 10,\n  gridOuterPaddingX: 25,\n  gridOuterPaddingY: 25,\n  gridInnerPaddingX: 6,\n  gridInnerPaddingY: 3,\n  gridHexWidth: 16,\n  gridHexHeight: 14,\n  hexWidth: 12, //24,\n  hexHeight: 12,\n  hexPaddingX: 0, //5,  //3,\n  hexPaddingY: 0, //5,  //3,\n  fastGrowIterations: 8, //10,\n  minimalGrowIterations: 120, //48,\n  maxRegionSizeFactor: 3,\n  divisibilityBy: 1,\n  probabilityCreateRegionAt: 0.6,\n};\n\nexport function createContinent(cfg, onProgress) {\n  return __kiwotiGo.then(\n    () => {\n      onProgress(0.1)\n      return new Promise((resolve) => {\n        __kiwotiGo_createContinent(\n          {\n            ...DefaultConfig,\n            ...cfg,\n          },\n          (progress) => {\n            onProgress(0.1 + (progress * 0.7))\n          },\n          (result) => {\n            onProgress(0.8)\n            const json = JSON.parse(result)\n            onProgress(0.9)\n            resolve(json)\n          }\n        );\n      })\n    }\n  );\n}\n","const uniq = (arr) => Array.from(new Set(arr));\n\nfunction findIslands(continent) {\n  const visitedRegions = new Set();\n\n  const crawlIsland = (regionId) => {\n    visitedRegions.add(regionId);\n    const { neighbors } = continent.regions[regionId];\n    return [\n      regionId,\n      ...neighbors\n        .filter((neighborId) => !visitedRegions.has(neighborId))\n        .map((neighborId) => crawlIsland(neighborId))\n        .flat(),\n    ];\n  };\n\n  let islands = [];\n\n  continent.regions.forEach((region) => {\n    if (!visitedRegions.has(region.id)) {\n      islands.push(crawlIsland(region.id));\n    }\n  });\n\n  // remove duplicates\n  islands = islands.map(uniq);\n\n  const regions = continent.regions.map((region) => {\n    let islandId;\n\n    for (let i = 0; i < islands.length; i++) {\n      if (islands[i].includes(region.id)) {\n        islandId = i;\n        break;\n      }\n    }\n\n    return {\n      ...region,\n      islandId,\n    };\n  });\n\n  return {\n    ...continent,\n    islands,\n    regions,\n  };\n}\n\nconst calcDistance = (from, to) =>\n  Math.sqrt(Math.pow(to.x - from.x, 2) + Math.pow(to.y - from.y, 2));\n\nconst calcRegionDistances = ({ centerPoint: from }, regions) =>\n  regions.map(({ centerPoint: to }) => calcDistance(from, to));\n\nconst findMinIndex = (arr) => {\n  let min = arr[0];\n  let minIndex = 0;\n\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n\n  return minIndex;\n};\n\nconst findRegionsWithinOuterRange = ({\n  continent,\n  exlcudeIslands,\n  includeIslands,\n  exlcudeRegions,\n  from,\n  range,\n  maxRange,\n}) =>\n  continent.regions\n    .filter(\n      (region) =>\n        !exlcudeRegions.includes(region.id) &&\n        !exlcudeIslands.includes(region.islandId) &&\n        (!includeIslands || includeIslands.includes(region.islandId))\n    )\n    .filter(({ centerPoint: to }) => {\n      const distance = calcDistance(from, to);\n      return distance <= maxRange && distance - to.oR <= range;\n    })\n    .map((region) => region.id);\n\nfunction makeNewConnections(regions, connections) {\n  connections.forEach(([from, to]) => {\n    regions[from].neighbors.push(to);\n    regions[to].neighbors.push(from);\n  });\n  regions.forEach((region) => {\n    region.neighbors = uniq(region.neighbors);\n  });\n}\n\nfunction connectIslands(continent, config) {\n  const cfg = {\n    enableExtendedConnections: true,\n    maxExtendedOuterRangeFactor: 4.0,\n    ...config,\n  };\n\n  let islands = [...continent.islands];\n\n  while (islands.length > 1) {\n    const [curIsland, ...otherIslands] = islands;\n\n    const distancesToOtherIslands = curIsland.map((regionId) => {\n      const region = continent.regions[regionId];\n      const islandDistances = otherIslands.map(\n        (otherIsland, otherIslandsIndex) => {\n          const otherRegions = otherIsland.map((rId) => continent.regions[rId]);\n          const distancesToOtherRegions = calcRegionDistances(\n            region,\n            otherRegions\n          );\n          const idx = findMinIndex(distancesToOtherRegions);\n          return {\n            regionId: otherRegions[idx].id,\n            distance: distancesToOtherRegions[idx],\n            otherIslandsIndex,\n          };\n        }\n      );\n      const minIndex = findMinIndex(\n        islandDistances.map(({ distance }) => distance)\n      );\n      return {\n        regionFrom: regionId,\n        regionTo: islandDistances[minIndex].regionId,\n        distance: islandDistances[minIndex].distance,\n        otherIslandsIndex: islandDistances[minIndex].otherIslandsIndex,\n        islandDistances,\n      };\n    });\n\n    const minIndex = findMinIndex(\n      distancesToOtherIslands.map(({ distance }) => distance)\n    );\n\n    const nearest = distancesToOtherIslands[minIndex];\n    const connections = [[nearest.regionFrom, nearest.regionTo]];\n\n    if (cfg.enableExtendedConnections) {\n      const extendedConnections = [\n        ...findRegionsWithinOuterRange({\n          continent,\n          exlcudeRegions: [nearest.regionFrom, nearest.regionTo],\n          exlcudeIslands: [continent.regions[nearest.regionFrom].islandId],\n          from: continent.regions[nearest.regionFrom].centerPoint,\n          range: nearest.distance,\n          maxRange:\n            continent.regions[nearest.regionFrom].centerPoint.oR *\n            cfg.maxExtendedOuterRangeFactor,\n        }).map((id) => [nearest.regionFrom, id]),\n        ...findRegionsWithinOuterRange({\n          continent,\n          exlcudeRegions: [nearest.regionFrom, nearest.regionTo],\n          exlcudeIslands: [continent.regions[nearest.regionTo].islandId],\n          // includeIslands: [continent.regions[nearest.regionFrom].islandId],\n          from: continent.regions[nearest.regionTo].centerPoint,\n          range: nearest.distance,\n          maxRange:\n            continent.regions[nearest.regionTo].centerPoint.oR *\n            cfg.maxExtendedOuterRangeFactor,\n        }).map((id) => [nearest.regionTo, id]),\n      ];\n\n      connections.push(...extendedConnections);\n      makeNewConnections(continent.regions, connections);\n\n      // TODO find sharp triangular relationships to filter out triangles which are too flat\n\n    } else {\n      makeNewConnections(continent.regions, connections);\n    }\n\n    curIsland.push(...otherIslands[nearest.otherIslandsIndex]);\n    otherIslands.splice(nearest.otherIslandsIndex, 1);\n    islands = [curIsland, ...otherIslands];\n  }\n\n  return continent;\n}\n\nexport const findAndConnectAllIslands = (continent, config) =>\n  connectIslands(findIslands(continent), config);\n","import { createContinent } from \"./kiwotigo-wasm-bridge.mjs\";\nimport { findAndConnectAllIslands } from \"./kiwotigo-unite-islands.mjs\";\n\nconst DefaultConfig = {\n  // kiwotigo/continent\n  gridWidth: 7,\n  gridHeight: 7,\n  gridOuterPaddingX: 40,\n  gridOuterPaddingY: 40,\n  gridInnerPaddingX: 8,\n  gridInnerPaddingY: 8,\n  gridHexWidth: 15,\n  gridHexHeight: 15,\n  hexWidth: 10,\n  hexHeight: 10,\n  hexPaddingX: 0,\n  hexPaddingY: 0,\n  minimalGrowIterations: 100,\n  fastGrowIterations: 4,\n  maxRegionSizeFactor: 3,\n  probabilityCreateRegionAt: 0.7,\n  // NEW:\n  enableExtendedConnections: true,\n  maxExtendedOuterRangeFactor: 4.0,\n  canvasMargin: 10,\n};\n\n// =========================================================================\n\nconst min = (a, b) => (a < b ? a : b);\nconst max = (a, b) => (a > b ? a : b);\n\nconst getBoundingBox = (regions) => {\n  const anyCenterPoint = regions[0].centerPoint;\n  let top = anyCenterPoint.y;\n  let bottom = anyCenterPoint.y;\n  let left = anyCenterPoint.x;\n  let right = anyCenterPoint.x;\n\n  regions.forEach(({ centerPoint: { x, y, oR }, fullPath }) => {\n    top = min(top, y - oR);\n    bottom = max(bottom, y + oR);\n    left = min(left, x - oR);\n    right = max(right, x + oR);\n\n    const len = fullPath.length >> 1;\n    for (let i = 0; i < len; i++) {\n      const x = fullPath[i << 1];\n      const y = fullPath[(i << 1) + 1];\n      top = min(top, y);\n      bottom = max(bottom, y);\n      left = min(left, x);\n      right = max(right, x);\n    }\n  });\n\n  return {\n    top,\n    bottom,\n    left,\n    right,\n    width: right - left,\n    height: bottom - top,\n  };\n};\n\nconst transformAllCoords = (regions, transformer) => {\n  const transformPath = (path) => {\n    const len = path.length >> 1;\n    for (let i = 0; i < len; i++) {\n      const xi = i << 1;\n      path.splice(xi, 2, ...transformer(path[xi], path[xi + 1]));\n    }\n  };\n\n  regions.forEach(({ centerPoint, fullPath, basePath }) => {\n    const v = transformer(centerPoint.x, centerPoint.y);\n    centerPoint.x = v[0];\n    centerPoint.y = v[1];\n\n    transformPath(fullPath);\n    transformPath(basePath);\n  });\n};\n\nconst flattenPathCoords = (path) => path.flatMap((vec) => [vec.x, vec.y]);\n\nconst convertToIntermediateContinentalFormat = (config, continent) => {\n  const regions = continent.regions.map((region, id) => ({\n    id,\n    basePath: flattenPathCoords(region.basePath),\n    fullPath: flattenPathCoords(region.fullPath),\n    centerPoint: continent.centerPoints[id],\n    neighbors: continent.neighbors[id],\n    size: continent.regionSizes[id],\n  }));\n\n  const bBox = getBoundingBox(regions);\n  const offsetX = bBox.left - config.canvasMargin;\n  const offsetY = bBox.top - config.canvasMargin;\n\n  transformAllCoords(regions, (x, y) => [x - offsetX, y - offsetY]);\n\n  const canvasWidth = bBox.width + 2 * config.canvasMargin;\n  const canvasHeight = bBox.height + 2 * config.canvasMargin;\n\n  return {\n    regions,\n    canvasWidth,\n    canvasHeight,\n  };\n};\n\n// =========================================================================\n\nconst _postProgress = (id) => (progress) =>\n  postMessage({ id, progress, type: \"progress\" });\n\nself.onmessage = (e) => {\n  const { id, originData, ...data } = e.data;\n  const postProgress = _postProgress(id);\n\n  let config;\n  let afterCreateContinent;\n\n  if (originData) {\n    const parsedOriginData =\n      typeof originData === \"string\" ? JSON.parse(originData) : originData;\n    config = { ...DefaultConfig, ...parsedOriginData.config, ...data };\n    afterCreateContinent = Promise.resolve(parsedOriginData);\n  } else {\n    config = { ...DefaultConfig, ...data };\n    afterCreateContinent = createContinent(config, (progress) =>\n      postProgress(progress * 0.7)\n    );\n  }\n\n  afterCreateContinent\n    .then((result) => {\n      postProgress(0.7);\n\n      const originData = JSON.stringify({\n        config,\n        continent: result.continent,\n      });\n\n      let continent;\n      try {\n        continent = convertToIntermediateContinentalFormat(\n          config,\n          result.continent\n        );\n\n        postProgress(0.8);\n\n        continent = findAndConnectAllIslands(continent, config);\n      } catch (err) {\n        console.error(\"kiwotigo post-processing panic!\", err);\n      }\n\n      return {\n        id,\n        config,\n        continent,\n        originData,\n      };\n    })\n    .then((result) => postMessage({ ...result, type: \"result\" }));\n};\n"],"names":["global","window","self","Error","require","fs","Object","keys","enosys","err","code","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","[object Object]","fd","buf","decoder","decode","nl","lastIndexOf","console","log","substr","length","offset","position","callback","this","writeSync","path","mode","uid","gid","link","perm","flags","buffer","from","to","atime","mtime","process","getuid","getgid","geteuid","getegid","pid","ppid","crypto","nodeCrypto","b","randomFillSync","performance","sec","nsec","hrtime","TextEncoder","TextDecoder","encoder","Go","argv","env","exit","warn","_exitPromise","Promise","resolve","_resolveExitPromise","_pendingEvent","_scheduledTimeouts","Map","_nextCallbackTimeoutID","setInt64","addr","v","mem","setUint32","Math","floor","getInt64","getUint32","getInt32","loadValue","f","getFloat64","isNaN","id","_values","storeValue","nanHead","setFloat64","undefined","_ids","get","_idPool","pop","_goRefCounts","set","typeFlag","loadSlice","array","len","Uint8Array","_inst","exports","loadSliceOfValues","a","Array","i","loadString","saddr","DataView","timeOrigin","Date","now","importObject","go","runtime.wasmExit","sp","exited","runtime.wasmWrite","p","n","runtime.resetMemoryDataView","runtime.nanotime1","runtime.walltime1","msec","getTime","setInt32","runtime.scheduleTimeoutEvent","setTimeout","_resume","has","runtime.clearTimeoutEvent","clearTimeout","delete","runtime.getRandomData","getRandomValues","syscall/js.finalizeRef","push","syscall/js.stringVal","syscall/js.valueGet","result","Reflect","getsp","syscall/js.valueSet","syscall/js.valueDelete","deleteProperty","syscall/js.valueIndex","syscall/js.valueSetIndex","syscall/js.valueCall","m","args","apply","setUint8","syscall/js.valueInvoke","syscall/js.valueNew","construct","syscall/js.valueLength","parseInt","syscall/js.valuePrepareString","str","encode","String","syscall/js.valueLoadString","syscall/js.valueInstanceOf","syscall/js.copyBytesToGo","dst","src","Uint8ClampedArray","toCopy","subarray","syscall/js.copyBytesToJS","debug","value","instance","NaN","fill","Infinity","strPtr","ptr","bytes","argc","argvPtrs","forEach","arg","sort","key","run","resume","event","arguments","main","module","versions","electron","error","slice","assign","TMPDIR","tmpdir","WebAssembly","instantiate","readFileSync","then","on","catch","__kiwotiGo","instantiateStreaming","fetch","DefaultConfig","gridWidth","gridHeight","gridOuterPaddingX","gridOuterPaddingY","gridInnerPaddingX","gridInnerPaddingY","gridHexWidth","gridHexHeight","hexWidth","hexHeight","hexPaddingX","hexPaddingY","fastGrowIterations","minimalGrowIterations","maxRegionSizeFactor","divisibilityBy","probabilityCreateRegionAt","uniq","arr","Set","findIslands","continent","visitedRegions","islands","regions","region","crawlIsland","regionId","add","neighbors","filter","neighborId","map","flat","islandId","includes","calcDistance","sqrt","pow","x","y","findMinIndex","min","minIndex","findRegionsWithinOuterRange","exlcudeIslands","includeIslands","exlcudeRegions","range","maxRange","centerPoint","distance","oR","makeNewConnections","connections","connectIslands","config","cfg","enableExtendedConnections","maxExtendedOuterRangeFactor","curIsland","otherIslands","distancesToOtherIslands","islandDistances","otherIsland","otherIslandsIndex","otherRegions","rId","distancesToOtherRegions","idx","regionFrom","regionTo","nearest","extendedConnections","splice","canvasMargin","max","flattenPathCoords","flatMap","vec","convertToIntermediateContinentalFormat","basePath","fullPath","centerPoints","size","regionSizes","bBox","anyCenterPoint","top","bottom","left","right","width","height","getBoundingBox","offsetX","offsetY","transformer","transformPath","xi","transformAllCoords","canvasWidth","canvasHeight","onmessage","e","afterCreateContinent","onProgress","data","originData","postProgress","progress","postMessage","type","_postProgress","parsedOriginData","JSON","parse","__kiwotiGo_createContinent","json","stringify","findAndConnectAllIslands"],"mappings":"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"}