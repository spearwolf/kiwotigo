{"version":3,"file":"kiwotigo.worker.js","sources":["../wasm_exec.js","../kiwotigo-wasm-bridge.mjs","../kiwotigo-unite-islands.mjs","../kiwotigo.worker.mjs"],"sourcesContent":["// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n(() => {\n\t// Map multiple JavaScript environments to a single common API,\n\t// preferring web standards over Node.js API.\n\t//\n\t// Environments considered:\n\t// - Browsers\n\t// - Node.js\n\t// - Electron\n\t// - Parcel\n\t// - Webpack\n\n\tif (typeof global !== \"undefined\") {\n\t\t// global already exists\n\t} else if (typeof window !== \"undefined\") {\n\t\twindow.global = window;\n\t} else if (typeof self !== \"undefined\") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error(\"cannot export Go (neither global, window nor self is defined)\");\n\t}\n\n\tif (!global.require && typeof require !== \"undefined\") {\n\t\tglobal.require = require;\n\t}\n\n\tif (!global.fs && global.require) {\n\t\tconst fs = require(\"fs\");\n\t\tif (typeof fs === \"object\" && fs !== null && Object.keys(fs).length !== 0) {\n\t\t\tglobal.fs = fs;\n\t\t}\n\t}\n\n\tconst enosys = () => {\n\t\tconst err = new Error(\"not implemented\");\n\t\terr.code = \"ENOSYS\";\n\t\treturn err;\n\t};\n\n\tif (!global.fs) {\n\t\tlet outputBuf = \"\";\n\t\tglobal.fs = {\n\t\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\t\twriteSync(fd, buf) {\n\t\t\t\toutputBuf += decoder.decode(buf);\n\t\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\t\tif (nl != -1) {\n\t\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t\t}\n\t\t\t\treturn buf.length;\n\t\t\t},\n\t\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\t\tcallback(enosys());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\t\tcallback(null, n);\n\t\t\t},\n\t\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tclose(fd, callback) { callback(enosys()); },\n\t\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\t\tfstat(fd, callback) { callback(enosys()); },\n\t\t\tfsync(fd, callback) { callback(null); },\n\t\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tlink(path, link, callback) { callback(enosys()); },\n\t\t\tlstat(path, callback) { callback(enosys()); },\n\t\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\t\treaddir(path, callback) { callback(enosys()); },\n\t\t\treadlink(path, callback) { callback(enosys()); },\n\t\t\trename(from, to, callback) { callback(enosys()); },\n\t\t\trmdir(path, callback) { callback(enosys()); },\n\t\t\tstat(path, callback) { callback(enosys()); },\n\t\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\t\tunlink(path, callback) { callback(enosys()); },\n\t\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t\t};\n\t}\n\n\tif (!global.process) {\n\t\tglobal.process = {\n\t\t\tgetuid() { return -1; },\n\t\t\tgetgid() { return -1; },\n\t\t\tgeteuid() { return -1; },\n\t\t\tgetegid() { return -1; },\n\t\t\tgetgroups() { throw enosys(); },\n\t\t\tpid: -1,\n\t\t\tppid: -1,\n\t\t\tumask() { throw enosys(); },\n\t\t\tcwd() { throw enosys(); },\n\t\t\tchdir() { throw enosys(); },\n\t\t}\n\t}\n\n\tif (!global.crypto && global.require) {\n\t\tconst nodeCrypto = require(\"crypto\");\n\t\tglobal.crypto = {\n\t\t\tgetRandomValues(b) {\n\t\t\t\tnodeCrypto.randomFillSync(b);\n\t\t\t},\n\t\t};\n\t}\n\tif (!global.crypto) {\n\t\tthrow new Error(\"global.crypto is not available, polyfill required (getRandomValues only)\");\n\t}\n\n\tif (!global.performance) {\n\t\tglobal.performance = {\n\t\t\tnow() {\n\t\t\t\tconst [sec, nsec] = process.hrtime();\n\t\t\t\treturn sec * 1000 + nsec / 1000000;\n\t\t\t},\n\t\t};\n\t}\n\n\tif (!global.TextEncoder && global.require) {\n\t\tglobal.TextEncoder = require(\"util\").TextEncoder;\n\t}\n\tif (!global.TextEncoder) {\n\t\tthrow new Error(\"global.TextEncoder is not available, polyfill required\");\n\t}\n\n\tif (!global.TextDecoder && global.require) {\n\t\tglobal.TextDecoder = require(\"util\").TextDecoder;\n\t}\n\tif (!global.TextDecoder) {\n\t\tthrow new Error(\"global.TextDecoder is not available, polyfill required\");\n\t}\n\n\t// End of polyfills for common API.\n\n\tconst encoder = new TextEncoder(\"utf-8\");\n\tconst decoder = new TextDecoder(\"utf-8\");\n\n\tglobal.Go = class {\n\t\tconstructor() {\n\t\t\tthis.argv = [\"js\"];\n\t\t\tthis.env = {};\n\t\t\tthis.exit = (code) => {\n\t\t\t\tif (code !== 0) {\n\t\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\t\tthis._resolveExitPromise = resolve;\n\t\t\t});\n\t\t\tthis._pendingEvent = null;\n\t\t\tthis._scheduledTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\tthis.mem.setUint32(addr + 0, v, true);\n\t\t\t\tthis.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t}\n\n\t\t\tconst getInt64 = (addr) => {\n\t\t\t\tconst low = this.mem.getUint32(addr + 0, true);\n\t\t\t\tconst high = this.mem.getInt32(addr + 4, true);\n\t\t\t\treturn low + high * 4294967296;\n\t\t\t}\n\n\t\t\tconst loadValue = (addr) => {\n\t\t\t\tconst f = this.mem.getFloat64(addr, true);\n\t\t\t\tif (f === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = this.mem.getUint32(addr, true);\n\t\t\t\treturn this._values[id];\n\t\t\t}\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tconst nanHead = 0x7FF80000;\n\n\t\t\t\tif (typeof v === \"number\" && v !== 0) {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.mem.setFloat64(addr, v, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (v === undefined) {\n\t\t\t\t\tthis.mem.setFloat64(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = this._values.length;\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t}\n\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\tlet typeFlag = 0;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase \"object\":\n\t\t\t\t\t\tif (v !== null) {\n\t\t\t\t\t\t\ttypeFlag = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\tthis.mem.setUint32(addr, id, true);\n\t\t\t}\n\n\t\t\tconst loadSlice = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t\t}\n\n\t\t\tconst loadSliceOfValues = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\tconst loadString = (addr) => {\n\t\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t\t}\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\tgo: {\n\t\t\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\n\t\t\t\t\t// func wasmExit(code int32)\n\t\t\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst code = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tthis.exited = true;\n\t\t\t\t\t\tdelete this._inst;\n\t\t\t\t\t\tdelete this._values;\n\t\t\t\t\t\tdelete this._goRefCounts;\n\t\t\t\t\t\tdelete this._ids;\n\t\t\t\t\t\tdelete this._idPool;\n\t\t\t\t\t\tthis.exit(code);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\t\t\tconst n = this.mem.getInt32(sp + 24, true);\n\t\t\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func resetMemoryDataView()\n\t\t\t\t\t\"runtime.resetMemoryDataView\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func nanotime1() int64\n\t\t\t\t\t\"runtime.nanotime1\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func walltime() (sec int64, nsec int32)\n\t\t\t\t\t\"runtime.walltime\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst msec = (new Date).getTime();\n\t\t\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\twhile (this._scheduledTimeouts.has(id)) {\n\t\t\t\t\t\t\t\t\t// for some reason Go failed to register the timeout event, log and try again\n\t\t\t\t\t\t\t\t\t// (temporary workaround for https://github.com/golang/go/issues/28975)\n\t\t\t\t\t\t\t\t\tconsole.warn(\"scheduleTimeoutEvent: missed timeout event\");\n\t\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t\t\t));\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, id, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func getRandomData(r []byte)\n\t\t\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t\"syscall/js.finalizeRef\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this.mem.getUint32(sp + 8, true);\n\t\t\t\t\t\tthis._goRefCounts[id]--;\n\t\t\t\t\t\tif (this._goRefCounts[id] === 0) {\n\t\t\t\t\t\t\tconst v = this._values[id];\n\t\t\t\t\t\t\tthis._values[id] = null;\n\t\t\t\t\t\t\tthis._ids.delete(v);\n\t\t\t\t\t\t\tthis._idPool.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t\"syscall/js.valueDelete\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tthis.mem.setUint8(sp + 24, (loadValue(sp + 8) instanceof loadValue(sp + 16)) ? 1 : 0);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToGo\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst dst = loadSlice(sp + 8);\n\t\t\t\t\t\tconst src = loadValue(sp + 32);\n\t\t\t\t\t\tif (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToJS\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst dst = loadValue(sp + 8);\n\t\t\t\t\t\tconst src = loadSlice(sp + 16);\n\t\t\t\t\t\tif (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t\"debug\": (value) => {\n\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tif (!(instance instanceof WebAssembly.Instance)) {\n\t\t\t\tthrow new Error(\"Go.run: WebAssembly.Instance expected\");\n\t\t\t}\n\t\t\tthis._inst = instance;\n\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\tNaN,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tglobal,\n\t\t\t\tthis,\n\t\t\t];\n\t\t\tthis._goRefCounts = new Array(this._values.length).fill(Infinity); // number of references that Go has to a JS value, indexed by reference id\n\t\t\tthis._ids = new Map([ // mapping from JS values to reference ids\n\t\t\t\t[0, 1],\n\t\t\t\t[null, 2],\n\t\t\t\t[true, 3],\n\t\t\t\t[false, 4],\n\t\t\t\t[global, 5],\n\t\t\t\t[this, 6],\n\t\t\t]);\n\t\t\tthis._idPool = [];   // unused ids that have been garbage collected\n\t\t\tthis.exited = false; // whether the Go program has exited\n\n\t\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\t\tlet offset = 4096;\n\n\t\t\tconst strPtr = (str) => {\n\t\t\t\tconst ptr = offset;\n\t\t\t\tconst bytes = encoder.encode(str + \"\\0\");\n\t\t\t\tnew Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n\t\t\t\toffset += bytes.length;\n\t\t\t\tif (offset % 8 !== 0) {\n\t\t\t\t\toffset += 8 - (offset % 8);\n\t\t\t\t}\n\t\t\t\treturn ptr;\n\t\t\t};\n\n\t\t\tconst argc = this.argv.length;\n\n\t\t\tconst argvPtrs = [];\n\t\t\tthis.argv.forEach((arg) => {\n\t\t\t\targvPtrs.push(strPtr(arg));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst keys = Object.keys(this.env).sort();\n\t\t\tkeys.forEach((key) => {\n\t\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst argv = offset;\n\t\t\targvPtrs.forEach((ptr) => {\n\t\t\t\tthis.mem.setUint32(offset, ptr, true);\n\t\t\t\tthis.mem.setUint32(offset + 4, 0, true);\n\t\t\t\toffset += 8;\n\t\t\t});\n\n\t\t\t// The linker guarantees global data starts from at least wasmMinDataAddr.\n\t\t\t// Keep in sync with cmd/link/internal/ld/data.go:wasmMinDataAddr.\n\t\t\tconst wasmMinDataAddr = 4096 + 8192;\n\t\t\tif (offset >= wasmMinDataAddr) {\n\t\t\t\tthrow new Error(\"total length of command line and environment variables exceeds limit\");\n\t\t\t}\n\n\t\t\tthis._inst.exports.run(argc, argv);\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t\tawait this._exitPromise;\n\t\t}\n\n\t\t_resume() {\n\t\t\tif (this.exited) {\n\t\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t\t}\n\t\t\tthis._inst.exports.resume();\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t}\n\n\t\t_makeFuncWrapper(id) {\n\t\t\tconst go = this;\n\t\t\treturn function () {\n\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n\t\t\t};\n\t\t}\n\t}\n\n\tif (\n\t\ttypeof module !== \"undefined\" &&\n\t\tglobal.require &&\n\t\tglobal.require.main === module &&\n\t\tglobal.process &&\n\t\tglobal.process.versions &&\n\t\t!global.process.versions.electron\n\t) {\n\t\tif (process.argv.length < 3) {\n\t\t\tconsole.error(\"usage: go_js_wasm_exec [wasm binary] [arguments]\");\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tconst go = new Go();\n\t\tgo.argv = process.argv.slice(2);\n\t\tgo.env = Object.assign({ TMPDIR: require(\"os\").tmpdir() }, process.env);\n\t\tgo.exit = process.exit;\n\t\tWebAssembly.instantiate(fs.readFileSync(process.argv[2]), go.importObject).then((result) => {\n\t\t\tprocess.on(\"exit\", (code) => { // Node.js exits if no event handler is pending\n\t\t\t\tif (code === 0 && !go.exited) {\n\t\t\t\t\t// deadlock, make Go print error and stack traces\n\t\t\t\t\tgo._pendingEvent = { id: 0 };\n\t\t\t\t\tgo._resume();\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn go.run(result.instance);\n\t\t}).catch((err) => {\n\t\t\tconsole.error(err);\n\t\t\tprocess.exit(1);\n\t\t});\n\t}\n})();\n","import \"./wasm_exec.js\";\n\nconst go = new Go();\nconst __kiwotiGo = WebAssembly.instantiateStreaming(\n  fetch(\"kiwotigo.wasm\"),\n  go.importObject\n).then((result) => {\n  go.run(result.instance);\n});\n\nexport const DefaultConfig = {\n  gridWidth: 5, //10,\n  gridHeight: 5, //10,\n  gridOuterPaddingX: 80, //25,\n  gridOuterPaddingY: 80, //25,\n  gridInnerPaddingX: 15, //6,\n  gridInnerPaddingY: 15, //3,\n  gridHexWidth: 15, //16,\n  gridHexHeight: 15, //14,\n  hexWidth: 10, //12, //24,\n  hexHeight: 10, //12,\n  hexPaddingX: 0, //5,  //3,\n  hexPaddingY: 0, //5,  //3,\n  fastGrowIterations: 5, //8, //10,\n  minimalGrowIterations: 20, //120, //48,\n  maxRegionSizeFactor: 3,\n  divisibilityBy: 1,\n  probabilityCreateRegionAt: 0.5, //0.6,\n};\n\nexport function createContinent(cfg, onProgress) {\n  return __kiwotiGo.then(\n    () => {\n      onProgress(0.1)\n      return new Promise((resolve) => {\n        __kiwotiGo_createContinent(\n          {\n            ...DefaultConfig,\n            ...cfg,\n          },\n          (progress) => {\n            onProgress(0.1 + (progress * 0.7))\n          },\n          (result) => {\n            onProgress(0.8)\n            const json = JSON.parse(result)\n            onProgress(0.9)\n            resolve(json)\n          }\n        );\n      })\n    }\n  );\n}\n","const uniq = (arr) => Array.from(new Set(arr));\n\nfunction findIslands(continent) {\n  const visitedRegions = new Set();\n\n  const crawlIsland = (regionId) => {\n    visitedRegions.add(regionId);\n    const { neighbors } = continent.regions[regionId];\n    return [\n      regionId,\n      ...neighbors\n        .filter((neighborId) => !visitedRegions.has(neighborId))\n        .map((neighborId) => crawlIsland(neighborId))\n        .flat(),\n    ];\n  };\n\n  let islands = [];\n\n  continent.regions.forEach((region) => {\n    if (!visitedRegions.has(region.id)) {\n      islands.push(crawlIsland(region.id));\n    }\n  });\n\n  // remove duplicates\n  islands = islands.map(uniq);\n\n  const regions = continent.regions.map((region) => {\n    let islandId;\n\n    for (let i = 0; i < islands.length; i++) {\n      if (islands[i].includes(region.id)) {\n        islandId = i;\n        break;\n      }\n    }\n\n    return {\n      ...region,\n      islandId,\n    };\n  });\n\n  return {\n    ...continent,\n    islands,\n    regions,\n  };\n}\n\nconst calcDistance = (from, to) =>\n  Math.sqrt(Math.pow(to.x - from.x, 2) + Math.pow(to.y - from.y, 2));\n\nconst calcRegionDistances = ({ centerPoint: from }, regions) =>\n  regions.map(({ centerPoint: to }) => calcDistance(from, to));\n\nconst findMinIndex = (arr) => {\n  let min = arr[0];\n  let minIndex = 0;\n\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n\n  return minIndex;\n};\n\nconst findRegionsWithinOuterRange = ({\n  continent,\n  exlcudeIslands,\n  includeIslands,\n  exlcudeRegions,\n  from,\n  range,\n  maxRange,\n}) =>\n  continent.regions\n    .filter(\n      (region) =>\n        !exlcudeRegions.includes(region.id) &&\n        !exlcudeIslands.includes(region.islandId) &&\n        (!includeIslands || includeIslands.includes(region.islandId))\n    )\n    .filter(({ centerPoint: to }) => {\n      const distance = calcDistance(from, to);\n      return distance <= maxRange && distance - to.oR <= range;\n    })\n    .map((region) => region.id);\n\nfunction makeNewConnections(regions, connections) {\n  connections.forEach(([from, to]) => {\n    regions[from].neighbors.push(to);\n    regions[to].neighbors.push(from);\n  });\n  regions.forEach((region) => {\n    region.neighbors = uniq(region.neighbors);\n  });\n}\n\nfunction connectIslands(continent, config) {\n  const cfg = {\n    enableExtendedConnections: true,\n    maxExtendedOuterRangeFactor: 4.0,\n    ...config,\n  };\n\n  let islands = [...continent.islands];\n\n  while (islands.length > 1) {\n    const [curIsland, ...otherIslands] = islands;\n\n    const distancesToOtherIslands = curIsland.map((regionId) => {\n      const region = continent.regions[regionId];\n      const islandDistances = otherIslands.map(\n        (otherIsland, otherIslandsIndex) => {\n          const otherRegions = otherIsland.map((rId) => continent.regions[rId]);\n          const distancesToOtherRegions = calcRegionDistances(\n            region,\n            otherRegions\n          );\n          const idx = findMinIndex(distancesToOtherRegions);\n          return {\n            regionId: otherRegions[idx].id,\n            distance: distancesToOtherRegions[idx],\n            otherIslandsIndex,\n          };\n        }\n      );\n      const minIndex = findMinIndex(\n        islandDistances.map(({ distance }) => distance)\n      );\n      return {\n        regionFrom: regionId,\n        regionTo: islandDistances[minIndex].regionId,\n        distance: islandDistances[minIndex].distance,\n        otherIslandsIndex: islandDistances[minIndex].otherIslandsIndex,\n        islandDistances,\n      };\n    });\n\n    const minIndex = findMinIndex(\n      distancesToOtherIslands.map(({ distance }) => distance)\n    );\n\n    const nearest = distancesToOtherIslands[minIndex];\n    const connections = [[nearest.regionFrom, nearest.regionTo]];\n\n    if (cfg.enableExtendedConnections) {\n      const extendedConnections = [\n        ...findRegionsWithinOuterRange({\n          continent,\n          exlcudeRegions: [nearest.regionFrom, nearest.regionTo],\n          exlcudeIslands: [continent.regions[nearest.regionFrom].islandId],\n          from: continent.regions[nearest.regionFrom].centerPoint,\n          range: nearest.distance,\n          maxRange:\n            continent.regions[nearest.regionFrom].centerPoint.oR *\n            cfg.maxExtendedOuterRangeFactor,\n        }).map((id) => [nearest.regionFrom, id]),\n        ...findRegionsWithinOuterRange({\n          continent,\n          exlcudeRegions: [nearest.regionFrom, nearest.regionTo],\n          exlcudeIslands: [continent.regions[nearest.regionTo].islandId],\n          // includeIslands: [continent.regions[nearest.regionFrom].islandId],\n          from: continent.regions[nearest.regionTo].centerPoint,\n          range: nearest.distance,\n          maxRange:\n            continent.regions[nearest.regionTo].centerPoint.oR *\n            cfg.maxExtendedOuterRangeFactor,\n        }).map((id) => [nearest.regionTo, id]),\n      ];\n\n      connections.push(...extendedConnections);\n      makeNewConnections(continent.regions, connections);\n\n      // TODO find sharp triangular relationships to filter out triangles which are too flat\n\n    } else {\n      makeNewConnections(continent.regions, connections);\n    }\n\n    curIsland.push(...otherIslands[nearest.otherIslandsIndex]);\n    otherIslands.splice(nearest.otherIslandsIndex, 1);\n    islands = [curIsland, ...otherIslands];\n  }\n\n  return continent;\n}\n\nexport const findAndConnectAllIslands = (continent, config) =>\n  connectIslands(findIslands(continent), config);\n","import { createContinent } from './kiwotigo-wasm-bridge.mjs';\nimport { findAndConnectAllIslands } from './kiwotigo-unite-islands.mjs';\n\nconst DefaultConfig = {\n  gridWidth: 7,\n  gridHeight: 7,\n  gridOuterPaddingY: 80,\n  gridInnerPaddingX: 15,\n  gridInnerPaddingY: 15,\n  gridHexWidth: 15,\n  gridHexHeight: 15,\n  hexWidth: 10,\n  hexHeight: 10,\n  hexPaddingX: 0,\n  hexPaddingY: 0,\n  minimalGrowIterations: 20,\n  fastGrowIterations: 5,\n  maxRegionSizeFactor: 3,\n  probabilityCreateRegionAt: 0.5,\n  enableExtendedConnections: true,\n  maxExtendedOuterRangeFactor: 4.0,\n  canvasMargin: 100,\n};\n\n// =========================================================================\n\nconst min = (a, b) => (a < b ? a : b);\nconst max = (a, b) => (a > b ? a : b);\n\nconst getBoundingBox = (regions) => {\n  const anyCenterPoint = regions[0].centerPoint;\n  let top = anyCenterPoint.y;\n  let bottom = anyCenterPoint.y;\n  let left = anyCenterPoint.x;\n  let right = anyCenterPoint.x;\n\n  regions.forEach(({ centerPoint: cP, fullPath }) => {\n    top = min(top, cP.y - cP.oR);\n    bottom = max(bottom, cP.y + cP.oR);\n    left = min(left, cP.x - cP.oR);\n    right = max(right, cP.x + cP.oR);\n\n    const len = fullPath.length >> 1;\n    for (let i = 0; i < len; i++) {\n      const x = fullPath[i << 1];\n      const y = fullPath[(i << 1) + 1];\n      top = min(top, y);\n      bottom = max(bottom, y);\n      left = min(left, x);\n      right = max(right, x);\n    }\n  });\n\n  return {\n    top,\n    bottom,\n    left,\n    right,\n    width: right - left,\n    height: bottom - top,\n  };\n};\n\nconst calcRegionBoundingBox = ({ centerPoint: cP, fullPath }) => {\n  let top = cP.y;\n  let bottom = cP.y;\n  let left = cP.x;\n  let right = cP.x;\n\n  const len = fullPath.length >> 1;\n  for (let i = 0; i < len; i++) {\n    const x = fullPath[i << 1];\n    const y = fullPath[(i << 1) + 1];\n    top = min(top, y);\n    bottom = max(bottom, y);\n    left = min(left, x);\n    right = max(right, x);\n  }\n\n  return {\n    top,\n    bottom,\n    left,\n    right,\n    width: right - left,\n    height: bottom - top,\n  };\n};\n\nconst transformAllCoords = (regions, transformer) => {\n  const transformPath = (path) => {\n    const len = path.length >> 1;\n    for (let i = 0; i < len; i++) {\n      const xi = i << 1;\n      path.splice(xi, 2, ...transformer(path[xi], path[xi + 1]));\n    }\n  };\n\n  regions.forEach(({ centerPoint, fullPath, basePath }) => {\n    const v = transformer(centerPoint.x, centerPoint.y);\n    centerPoint.x = v[0];\n    centerPoint.y = v[1];\n\n    transformPath(fullPath);\n    transformPath(basePath);\n  });\n};\n\n// ============= path smoothing ============================================\n\nconst getCoordId = (x, y) => `${Math.round(y)};${Math.round(x)}`;\n\nclass PathCoordLocation {\n  constructor(regionId, pathType, pathIndex) {\n    this.regionId = regionId;\n    this.pathType = pathType;\n    this.pathIndex = pathIndex;\n  }\n}\n\nclass PathCoord {\n  constructor(id, isBaseline) {\n    this.id = id;\n    this.locations = [];\n    this.coords = null;\n    this.isBaseline = isBaseline;\n  }\n\n  addLocation(pathLocation) {\n    this.locations.push(pathLocation);\n  }\n\n  getCoordsIndices(regions, pLoc, coordsOffset = 0) {\n    const p = regions[pLoc.regionId][pLoc.pathType];\n    const pLen = p.length;\n    let xIndex = (pLoc.pathIndex + coordsOffset * 2) % pLen;\n    if (xIndex < 0) {\n      xIndex += pLen;\n    }\n    let yIndex = (pLoc.pathIndex + (coordsOffset * 2 + 1)) % p.length;\n    if (yIndex < 0) {\n      yIndex += pLen;\n    }\n    return [xIndex, yIndex];\n  }\n\n  getCoords(regions, pLoc, coordsOffset = 0) {\n    const p = regions[pLoc.regionId][pLoc.pathType];\n    const [xIndex, yIndex] = this.getCoordsIndices(regions, pLoc, coordsOffset);\n    return [p[xIndex], p[yIndex]];\n  }\n\n  copyCoords(regions, pLoc) {\n    const [xIndex, yIndex] = this.getCoordsIndices(regions, pLoc, 0);\n    const p = regions[pLoc.regionId][pLoc.pathType];\n    p[xIndex] = this.coords[0];\n    p[yIndex] = this.coords[1];\n  }\n\n  getCoastType() {\n    if (this.isBaseline) {\n      return 'city';\n    }\n    return this.locations.length === 1 ? 'seaside' : 'inland';\n  }\n\n  calcSmoothCoords(regions, weights, coastTypesFilter) {\n    const values = [];\n    const coastType = this.getCoastType();\n    if (coastTypesFilter && !coastTypesFilter.includes(coastType)) {\n      return;\n    }\n    this.locations.forEach((pLoc) => {\n      weights[coastType].forEach(([offset, weight]) => {\n        const [x, y] = this.getCoords(regions, pLoc, offset);\n        values.push([x, y, weight]);\n      });\n    });\n    const xSum = values.reduce((sum, [val, , w]) => val * w + sum, 0);\n    const ySum = values.reduce((sum, [, val, w]) => val * w + sum, 0);\n    const wSum = values.reduce((sum, [, , w]) => w + sum, 0);\n    this.coords = [xSum / wSum, ySum / wSum];\n  }\n\n  writeCoordsToLocations(regions) {\n    this.locations.forEach((pLoc) => {\n      this.copyCoords(regions, pLoc);\n    });\n  }\n}\n\nconst collectPathCoords = (regionId, pathType, path, coords) => {\n  const len = path.length;\n  for (let i = 0; i < len; i += 2) {\n    const coordId = getCoordId(path[i], path[i + 1]);\n    let pathCoord = coords.get(coordId);\n    if (!pathCoord) {\n      pathCoord = new PathCoord(coordId, pathType === 'basePath');\n      coords.set(coordId, pathCoord);\n    }\n    pathCoord.addLocation(new PathCoordLocation(regionId, pathType, i));\n  }\n};\n\nconst smoothAllPaths = (regions) => {\n  const coords = new Map();\n\n  // 1. collect all full~basePath coordinates\n  // ===========================================================\n  regions.forEach(({ id, fullPath, basePath }) => {\n    collectPathCoords(id, 'fullPath', fullPath, coords);\n    collectPathCoords(id, 'basePath', basePath, coords);\n  });\n\n  // 2. smooth all coordinates\n  // ===========================================================\n  const weights = {\n    city: [\n      // [-8, 0.25],\n      // [-5, 0.5],\n      // [-2, 0.75],\n      // [0, 1.5],\n      // [2, 0.75],\n      // [5, 0.5],\n      // [8, 0.25],\n      [-5, 0.1],\n      [-4, 0.2],\n      [-3, 0.3],\n      [-2, 0.5],\n      [-1, 0.8],\n      [0, 1.0],\n      [1, 0.8],\n      [2, 0.5],\n      [3, 0.3],\n      [4, 0.2],\n      [5, 0.1],\n    ],\n    inland: [\n      // [-3, 0.309],\n      // [-2, 0.588],\n      // [-1, 0.809],\n      // [0, 1.0],\n      // [1, 0.809],\n      // [2, 0.588],\n      // [3, 0.309],\n      [-1, .1],\n      [1, 1.0],\n      [2, .2],\n    ],\n    seaside: [\n      [-1, .3],\n      [1, 1.0],\n      [2, .3],\n      // [-1, 0.5],\n      // [0, 0.7],\n      // [1, 0.3],\n      // [3, 0.2],\n      // [4, 0.1],\n    ],\n  };\n\n  for (const pathCoord of coords.values()) {\n    pathCoord.calcSmoothCoords(regions, weights);\n  }\n\n  // 3. write coords back\n  // ===========================================================\n  for (const pathCoord of coords.values()) {\n    pathCoord.writeCoordsToLocations(regions);\n  }\n\n  // 4. smooth once again\n  // ===========================================================\n  for (const pathCoord of coords.values()) {\n    pathCoord.calcSmoothCoords(regions, weights);\n  }\n  for (const pathCoord of coords.values()) {\n    pathCoord.writeCoordsToLocations(regions);\n  }\n};\n\n// -------------------------------------------------------------------------\n\nconst flattenPathCoords = (path) => path.flatMap((vec) => [vec.x, vec.y]);\n\nconst convertToIntermediateContinentalFormat = (config, continent) => {\n  const regions = continent.regions.map((region, id) => ({\n    id,\n    basePath: flattenPathCoords(region.basePath),\n    fullPath: flattenPathCoords(region.fullPath),\n    centerPoint: continent.centerPoints[id],\n    neighbors: continent.neighbors[id],\n    size: continent.regionSizes[id],\n  }));\n\n  smoothAllPaths(regions);\n\n  const bBox = getBoundingBox(regions);\n  const offsetX = bBox.left - config.canvasMargin;\n  const offsetY = bBox.top - config.canvasMargin;\n\n  transformAllCoords(regions, (x, y) => [x - offsetX, y - offsetY]);\n\n  const canvasWidth = bBox.width + 2 * config.canvasMargin;\n  const canvasHeight = bBox.height + 2 * config.canvasMargin;\n\n  regions.forEach((region) => {\n    region.bBox = calcRegionBoundingBox(region);\n  });\n\n  return {\n    regions,\n    canvasWidth,\n    canvasHeight,\n  };\n};\n\n// =========================================================================\n\nconst _postProgress = (id) => (progress) =>\n  postMessage({ id, progress, type: 'progress' });\n\nself.onmessage = (e) => {\n  const { id, originData, ...data } = e.data;\n  const postProgress = _postProgress(id);\n\n  let config;\n  let afterCreateContinent;\n\n  if (originData) {\n    const parsedOriginData =\n      typeof originData === 'string' ? JSON.parse(originData) : originData;\n    config = { ...DefaultConfig, ...parsedOriginData.config, ...data };\n    afterCreateContinent = Promise.resolve(parsedOriginData);\n  } else {\n    config = { ...DefaultConfig, ...data };\n    afterCreateContinent = createContinent(config, (progress) =>\n      postProgress(progress * 0.7)\n    );\n  }\n\n  afterCreateContinent\n    .then((result) => {\n      postProgress(0.7);\n\n      const originData = JSON.stringify({\n        config,\n        continent: result.continent,\n      });\n\n      let continent;\n      try {\n        continent = convertToIntermediateContinentalFormat(\n          config,\n          result.continent\n        );\n\n        postProgress(0.8);\n\n        continent = findAndConnectAllIslands(continent, config);\n      } catch (err) {\n        console.error('kiwotigo post-processing panic!', err);\n      }\n\n      return {\n        id,\n        config,\n        continent,\n        originData,\n      };\n    })\n    .then((result) => postMessage({ ...result, type: 'result' }));\n};\n"],"names":["global","window","self","Error","require","fs","Object","keys","length","enosys","err","code","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","[object Object]","fd","buf","decoder","decode","nl","lastIndexOf","console","log","substr","offset","position","callback","this","writeSync","path","mode","uid","gid","link","perm","flags","buffer","from","to","atime","mtime","process","getuid","getgid","geteuid","getegid","pid","ppid","crypto","nodeCrypto","b","randomFillSync","performance","sec","nsec","hrtime","TextEncoder","TextDecoder","encoder","Go","argv","env","exit","warn","_exitPromise","Promise","resolve","_resolveExitPromise","_pendingEvent","_scheduledTimeouts","Map","_nextCallbackTimeoutID","setInt64","addr","v","mem","setUint32","Math","floor","getInt64","getUint32","getInt32","loadValue","f","getFloat64","isNaN","id","_values","storeValue","nanHead","setFloat64","undefined","_ids","get","_idPool","pop","_goRefCounts","set","typeFlag","loadSlice","array","len","Uint8Array","_inst","exports","loadSliceOfValues","a","Array","i","loadString","saddr","DataView","timeOrigin","Date","now","importObject","go","runtime.wasmExit","sp","exited","runtime.wasmWrite","p","n","runtime.resetMemoryDataView","runtime.nanotime1","runtime.walltime","msec","getTime","setInt32","runtime.scheduleTimeoutEvent","setTimeout","_resume","has","runtime.clearTimeoutEvent","clearTimeout","delete","runtime.getRandomData","getRandomValues","syscall/js.finalizeRef","push","syscall/js.stringVal","syscall/js.valueGet","result","Reflect","getsp","syscall/js.valueSet","syscall/js.valueDelete","deleteProperty","syscall/js.valueIndex","syscall/js.valueSetIndex","syscall/js.valueCall","m","args","apply","setUint8","syscall/js.valueInvoke","syscall/js.valueNew","construct","syscall/js.valueLength","parseInt","syscall/js.valuePrepareString","str","encode","String","syscall/js.valueLoadString","syscall/js.valueInstanceOf","syscall/js.copyBytesToGo","dst","src","Uint8ClampedArray","toCopy","subarray","syscall/js.copyBytesToJS","debug","value","instance","WebAssembly","Instance","NaN","fill","Infinity","strPtr","ptr","bytes","argc","argvPtrs","forEach","arg","sort","key","run","resume","event","arguments","module","main","versions","electron","error","slice","assign","TMPDIR","tmpdir","instantiate","readFileSync","then","on","catch","__kiwotiGo","instantiateStreaming","fetch","DefaultConfig","gridWidth","gridHeight","gridOuterPaddingX","gridOuterPaddingY","gridInnerPaddingX","gridInnerPaddingY","gridHexWidth","gridHexHeight","hexWidth","hexHeight","hexPaddingX","hexPaddingY","fastGrowIterations","minimalGrowIterations","maxRegionSizeFactor","divisibilityBy","probabilityCreateRegionAt","uniq","arr","Set","calcDistance","sqrt","pow","x","y","calcRegionDistances","regions","centerPoint","map","_ref2","findMinIndex","min","minIndex","findRegionsWithinOuterRange","_ref3","continent","exlcudeIslands","includeIslands","exlcudeRegions","range","maxRange","filter","region","includes","islandId","_ref4","distance","oR","makeNewConnections","connections","_ref5","neighbors","findAndConnectAllIslands","config","cfg","enableExtendedConnections","maxExtendedOuterRangeFactor","islands","curIsland","otherIslands","distancesToOtherIslands","regionId","islandDistances","otherIsland","otherIslandsIndex","otherRegions","rId","distancesToOtherRegions","idx","_ref6","regionFrom","regionTo","_ref7","nearest","extendedConnections","splice","connectIslands","visitedRegions","crawlIsland","add","neighborId","flat","findIslands","canvasMargin","max","PathCoordLocation","constructor","pathType","pathIndex","PathCoord","isBaseline","locations","coords","addLocation","pathLocation","getCoordsIndices","pLoc","coordsOffset","pLen","xIndex","yIndex","getCoords","copyCoords","getCoastType","calcSmoothCoords","weights","coastTypesFilter","values","coastType","weight","xSum","reduce","sum","val","w","ySum","wSum","writeCoordsToLocations","collectPathCoords","coordId","round","pathCoord","flattenPathCoords","flatMap","vec","convertToIntermediateContinentalFormat","basePath","fullPath","centerPoints","size","regionSizes","_ref8","city","inland","seaside","smoothAllPaths","bBox","anyCenterPoint","top","bottom","left","right","_ref","cP","width","height","getBoundingBox","offsetX","offsetY","transformer","transformPath","xi","transformAllCoords","canvasWidth","canvasHeight","calcRegionBoundingBox","onmessage","e","originData","data","postProgress","progress","postMessage","type","_postProgress","afterCreateContinent","parsedOriginData","JSON","parse","onProgress","__kiwotiGo_createContinent","json","stringify"],"mappings":"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"}