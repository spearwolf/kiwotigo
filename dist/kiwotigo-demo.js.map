{"version":3,"file":"kiwotigo-demo.js","sources":["../kiwotigo.mjs","../kiwotigo-painter.mjs","../kiwotigo-demo.mjs"],"sourcesContent":["const worker = new Worker('kiwotigo.worker.js')\n\nconst tmpResolvers = new Map()  // temporary id -> resolve: Promise.resolve(), onProgressFn\n\nconst createMessageId = (() => {\n  let lastId = 0\n  return () => {\n    ++lastId\n    return `kiwotigo-${lastId.toString(36)}`\n  }\n})()\n\nworker.onmessage = ({data}) => {\n  const { id, type } = data\n  const resolve = tmpResolvers.get(id)\n  if (resolve) {\n    switch (type) {\n      case 'progress':\n        if (resolve.onProgressFn) {\n          resolve.onProgressFn(data.progress)\n        }\n        break\n\n      case 'result':\n        tmpResolvers.delete(id)\n        delete data.type\n        if (data.originData) {\n          localStorage.setItem('kiwotigoOriginData',\n            typeof data.originData === 'string'\n              ? data.originData\n              : JSON.stringify(data.originData)\n          )\n        }\n        resolve.resolve(data)\n        break\n\n      default:\n        console.warn('unknown message type:', type, data)\n    }\n  }\n}\n\nexport const build = (config, onProgressFn) => new Promise(resolve => {\n  const id = createMessageId()\n  tmpResolvers.set(id, { resolve, onProgressFn })\n  worker.postMessage({ ...config, id })\n})\n","const REGION_OUTLINE_STROKE = \"#c5c5c5\";\nconst REGION_BASE_PATH_FILL = \"#e7e7e7\";\nconst REGION_FULL_PATH_FILL = \"#f5f5f5\";\nconst REGION_RADIUS_STROKE = \"#a1a1a1\";\nconst REGION_OUTER_RADIUS_STROKE = \"#bababa\";\nconst CONNECTION_STROKE = \"#f5b\";\n\nfunction clearCanvas(ctx) {\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n}\n\nfunction drawPath(ctx, regions, pathName, stroke = false) {\n  regions.forEach((region) => {\n    const path = region[pathName];\n\n    ctx.beginPath();\n    ctx.moveTo(path[0], path[1]);\n    const len = path.length >> 1;\n    for (let i = 1; i < len; i++) {\n      ctx.lineTo(path[i << 1], path[(i << 1) + 1]);\n    }\n    ctx.closePath();\n\n    ctx.fill();\n    if (stroke) {\n      ctx.stroke();\n    }\n  });\n}\n\nfunction drawRegions(ctx, continent, drawBasePath) {\n  ctx.strokeStyle = REGION_OUTLINE_STROKE;\n  ctx.lineWidth = 1;\n\n  ctx.fillStyle = REGION_FULL_PATH_FILL;\n  drawPath(ctx, continent.regions, \"fullPath\", true);\n\n  if (drawBasePath) {\n    ctx.fillStyle = REGION_BASE_PATH_FILL;\n    drawPath(ctx, continent.regions, \"basePath\");\n  }\n}\n\nfunction drawRegionsBase(ctx, continent) {\n  ctx.lineWidth = 1;\n\n  continent.regions.forEach(({ centerPoint: cp }) => {\n    ctx.strokeStyle = REGION_RADIUS_STROKE;\n    ctx.beginPath();\n    ctx.arc(cp.x, cp.y, cp.iR, 0, 2 * Math.PI, false);\n    ctx.closePath();\n    ctx.stroke();\n\n    ctx.strokeStyle = REGION_OUTER_RADIUS_STROKE;\n    ctx.beginPath();\n    ctx.arc(cp.x, cp.y, cp.oR, 0, 2 * Math.PI, false);\n    ctx.closePath();\n    ctx.stroke();\n  });\n}\n\n// const getCenterPoint = (continent, regionIdx) =>\n//   continent.regions[regionIdx].centerPoint;\n\nconst getRegion = (continent, regionIdx) => continent.regions[regionIdx];\n\nfunction drawRegionsConnections(ctx, continent) {\n  ctx.strokeStyle = CONNECTION_STROKE;\n  ctx.lineWidth = 2;\n\n  const alreadyDrawnConnection = new Set();\n\n  continent.regions.forEach((region) => {\n    region.neighbors.forEach((neighborId) => {\n      const connectionId =\n        region.id < neighborId\n          ? `${region.id};${neighborId}`\n          : `${neighborId};${region.id}`;\n      if (!alreadyDrawnConnection.has(connectionId)) {\n        alreadyDrawnConnection.add(connectionId);\n        const otherRegion = getRegion(continent, neighborId);\n        const isAnotherIsland = region.islandId !== otherRegion.islandId;\n\n        ctx.setLineDash(isAnotherIsland ? [2, 10] : []);\n        ctx.beginPath();\n        ctx.moveTo(region.centerPoint.x, region.centerPoint.y);\n        ctx.lineTo(otherRegion.centerPoint.x, otherRegion.centerPoint.y);\n        ctx.closePath();\n        ctx.stroke();\n      }\n    });\n  });\n}\n\nfunction drawRegionIds(ctx, continent) {\n  ctx.font = \"bold 36px sans-serif\";\n  ctx.shadowColor = \"#fff\";\n  ctx.shadowOffsetX = 0;\n  ctx.shadowOffsetY = 0;\n  ctx.shadowBlur = 4;\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = \"middle\";\n  ctx.fillStyle = \"#666\";\n\n  continent.regions.forEach(({ centerPoint: { x, y } }, i) => {\n    ctx.fillText(`${i}`, x, y);\n  });\n}\n\nexport default function draw(ctx, icf) {\n  clearCanvas(ctx);\n  drawRegions(ctx, icf, true);\n  drawRegionsBase(ctx, icf);\n  drawRegionsConnections(ctx, icf);\n  drawRegionIds(ctx, icf);\n}\n","import { build } from \"./kiwotigo.mjs\";\nimport draw from \"./kiwotigo-painter.mjs\";\n\nconst canvas = document.getElementById(\"kiwotigoCanvas\");\nconst canvasCtx = canvas.getContext(\"2d\");\n\nconst loadingMessages = [\n  \"I will now create a new world just for you ...\",\n  \"Such a thing can take a while, though ...\",\n  \"... each country must be carefully considered ...\",\n  \"Hold on, it can't be much longer ...\",\n  \"I'm almost finished, there's just a few final touches ...\",\n];\n\nconst displayLoadingInfo = (html) => {\n  document.querySelector(\".loadingModal-info\").innerHTML = html;\n};\n\nlet currentLoadingMessageIdx = 0;\nlet displayNextLoadingMessageHandle = 0;\n\nconst showLoadingState = () => {\n  displayLoadingInfo(loadingMessages[0]);\n  currentLoadingMessageIdx = 1;\n  document.querySelector(\".loadingModal\").classList.add(\"loading\");\n  clearInterval(displayNextLoadingMessageHandle);\n  displayNextLoadingMessageHandle = setInterval(() => {\n    displayLoadingInfo(loadingMessages[currentLoadingMessageIdx]);\n    currentLoadingMessageIdx =\n      (currentLoadingMessageIdx + 1) % loadingMessages.length;\n  }, 5000);\n};\n\nconst displayProgress = (progress) => {\n  const maxWidth = document\n    .querySelector(\".loadingModal-content\")\n    .getBoundingClientRect().width;\n  const el = document.querySelector(\".loadingModal-progress\");\n  el.style.width = `${Math.round(progress * maxWidth)}px`;\n};\n\nconst hideLoadingState = () => {\n  clearInterval(displayNextLoadingMessageHandle);\n  displayProgress(1);\n  setTimeout(() => {\n    document.querySelector(\".loadingModal\").classList.remove(\"loading\");\n  }, 500);\n};\n\nconst onCreate = (config) => {\n  showLoadingState();\n\n  build(config, displayProgress).then((data) => {\n    console.log(\"received new build\", data);\n    hideLoadingState();\n\n    canvas.width = data.continent.canvasWidth;\n    canvas.height = data.continent.canvasHeight;\n    const DPR = window.devicePixelRatio || 1;\n    if (DPR !== 1) {\n      canvas.style.width = `${Math.round(canvas.width / DPR)}px`;\n      canvas.style.height = `${Math.round(canvas.height / DPR)}px`;\n    }\n    draw(canvasCtx, data.continent);\n  });\n};\n\nconst getConfig = () => {\n  const { elements: formElements } = document.forms.kiwotigo;\n  return [\n    \"gridWidth\",\n    \"gridHeight\",\n    \"gridOuterPaddingX\",\n    \"gridOuterPaddingY\",\n    \"gridInnerPaddingX\",\n    \"gridInnerPaddingY\",\n    \"gridHexWidth\",\n    \"gridHexHeight\",\n    \"hexWidth\",\n    \"hexHeight\",\n    \"hexPaddingX\",\n    \"hexPaddingY\",\n    \"minimalGrowIterations\",\n    \"fastGrowIterations\",\n    \"maxRegionSizeFactor\",\n    \"probabilityCreateRegionAt\",\n    // \"enableExtendedConnections\",\n    \"maxExtendedOuterRangeFactor\",\n    \"canvasMargin\",\n  ].reduce((c, key) => ({ ...c, [key]: parseFloat(formElements[key].value) }), {\n    // swapXY: true,\n  });\n};\n\ndocument.forms.kiwotigo.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  onCreate(getConfig());\n\n  document.querySelector(\".kiwotigo-createContinentBtn\").blur();\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const originData = localStorage.getItem(\"kiwotigoOriginData\");\n  if (originData) {\n    onCreate({ ...getConfig(), originData });\n  }\n});\n\ndocument.querySelector(\".openCloseAction\").addEventListener(\"pointerup\", () => {\n  document.querySelector(\".createContinentConfig\").classList.toggle(\"opened\");\n});\n"],"names":["lastId","worker","Worker","tmpResolvers","Map","createMessageId","toString","onmessage","data","id","type","resolve","get","onProgressFn","progress","originData","localStorage","setItem","JSON","stringify","console","warn","drawPath","ctx","regions","pathName","stroke","forEach","region","path","beginPath","moveTo","len","length","i","lineTo","closePath","fill","draw","icf","clearRect","canvas","width","height","clearCanvas","continent","drawBasePath","strokeStyle","lineWidth","fillStyle","drawRegions","cp","centerPoint","arc","x","y","iR","Math","PI","oR","drawRegionsBase","alreadyDrawnConnection","Set","neighbors","neighborId","connectionId","has","add","otherRegion","regionIdx","getRegion","isAnotherIsland","islandId","setLineDash","drawRegionsConnections","font","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textAlign","textBaseline","fillText","drawRegionIds","document","getElementById","canvasCtx","getContext","loadingMessages","displayLoadingInfo","html","querySelector","innerHTML","currentLoadingMessageIdx","displayNextLoadingMessageHandle","displayProgress","maxWidth","getBoundingClientRect","style","round","onCreate","config","classList","clearInterval","setInterval","Promise","set","postMessage","build","then","log","setTimeout","remove","canvasWidth","canvasHeight","DPR","window","devicePixelRatio","getConfig","formElements","forms","kiwotigo","elements","reduce","c","key","parseFloat","value","addEventListener","event","preventDefault","blur","getItem","toggle"],"mappings":"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"}