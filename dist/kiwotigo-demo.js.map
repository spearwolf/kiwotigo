{"version":3,"file":"kiwotigo-demo.js","sources":["../kiwotigo.mjs","../kiwotigo-painter.mjs","../kiwotigo-demo.mjs"],"sourcesContent":["let worker\n\nlet lastBuild\nlet publishChannel\n\nexport const startBroadcasting = () => {\n  if (!publishChannel && typeof BroadcastChannel !== 'undefined') {\n    publishChannel = new BroadcastChannel('kiwotigo')\n    publishChannel.onmessage = ({ data }) => {\n      if (data) {\n        switch (data.type) {\n          case 'publishBuild':\n            if (lastBuild) {\n              publishChannel.postMessage(lastBuild)\n            }\n            break;\n          case 'ping':\n            publishChannel.postMessage({ type: 'pong' })\n            break;\n        }\n      }\n    }\n    if (lastBuild) {\n      publishChannel.postMessage(lastBuild)\n    }\n  }\n}\n\nconst tmpResolvers = new Map()  // temporary id -> resolve: Promise.resolve(), onProgressFn\n\nconst createMessageId = (() => {\n  let lastId = 0\n  return () => {\n    ++lastId\n    return `kiwotigo-${lastId.toString(36)}`\n  }\n})()\n\nconst initWorker = () => {\n  worker = new Worker('kiwotigo.worker.js')\n\n  worker.onmessage = ({data}) => {\n    const { id, type } = data\n    const resolve = tmpResolvers.get(id)\n    if (resolve) {\n      switch (type) {\n        case 'progress':\n          if (resolve.onProgressFn) {\n            resolve.onProgressFn(data.progress)\n          }\n          break\n\n        case 'result':\n          tmpResolvers.delete(id)\n          delete data.type\n          if (data.originData) {\n            localStorage.setItem('kiwotigoOriginData',\n              typeof data.originData === 'string'\n                ? data.originData\n                : JSON.stringify(data.originData)\n            )\n          }\n          resolve.resolve(data)\n          if (publishChannel) {\n            lastBuild = { type: 'build', data }\n            publishChannel.postMessage(lastBuild)\n          }\n          break\n\n        default:\n          console.warn('unknown message type:', type, data)\n      }\n    }\n  }\n}\n\nconst getWorker = () => {\n  if (!worker) {\n    initWorker()\n  }\n  return worker\n}\n\nexport const build = (config, onProgressFn) => new Promise(resolve => {\n  const id = createMessageId()\n  tmpResolvers.set(id, { resolve, onProgressFn })\n  getWorker().postMessage({ ...config, id })\n})\n","const REGION_OUTLINE_STROKE = '#a5a5a5';\nconst REGION_BASE_PATH_FILL = '#e7e7e7';\nconst REGION_FULL_PATH_FILL = '#f5f5f5';\nconst REGION_RADIUS_STROKE = '#a9a9a9';\nconst REGION_BBOX_STROKE = '#f0f0f0';\nconst REGION_OUTER_RADIUS_STROKE = '#cacaca';\nconst CONNECTION_STROKE = '#f5b';\n\nfunction clearCanvas(ctx) {\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n}\n\nfunction drawPath(ctx, regions, pathName, stroke = false) {\n  regions.forEach((region) => {\n    const path = region[pathName];\n\n    ctx.beginPath();\n    ctx.moveTo(path[0], path[1]);\n    const len = path.length >> 1;\n    for (let i = 1; i < len; i++) {\n      ctx.lineTo(path[i << 1], path[(i << 1) + 1]);\n    }\n    ctx.closePath();\n\n    ctx.fill();\n    if (stroke) {\n      ctx.stroke();\n    }\n  });\n}\n\nfunction drawRegions(ctx, continent, drawBasePath) {\n  ctx.strokeStyle = REGION_OUTLINE_STROKE;\n  ctx.lineWidth = 1;\n\n  ctx.fillStyle = REGION_FULL_PATH_FILL;\n  drawPath(ctx, continent.regions, 'fullPath', true);\n\n  if (drawBasePath) {\n    ctx.fillStyle = REGION_BASE_PATH_FILL;\n    drawPath(ctx, continent.regions, 'basePath');\n  }\n}\n\nfunction drawRegionsBase(ctx, continent) {\n  ctx.lineWidth = 1;\n\n  continent.regions.forEach(({ centerPoint: cp }) => {\n    ctx.strokeStyle = REGION_RADIUS_STROKE;\n    ctx.setLineDash([]);\n    ctx.beginPath();\n    ctx.arc(cp.x, cp.y, cp.iR, 0, 2 * Math.PI, false);\n    ctx.closePath();\n    ctx.stroke();\n\n    ctx.strokeStyle = REGION_OUTER_RADIUS_STROKE;\n    ctx.setLineDash([5, 15, 25]);\n    ctx.beginPath();\n    ctx.arc(cp.x, cp.y, cp.oR, 0, 2 * Math.PI, false);\n    ctx.closePath();\n    ctx.stroke();\n  });\n}\n\nconst getRegion = (continent, regionIdx) => continent.regions[regionIdx];\n\nfunction drawRegionsConnections(ctx, continent) {\n  ctx.setLineDash([]);\n  ctx.strokeStyle = CONNECTION_STROKE;\n  ctx.lineWidth = 3;\n\n  const alreadyDrawnConnection = new Set();\n\n  continent.regions.forEach((region) => {\n    region.neighbors.forEach((neighborId) => {\n      const connectionId =\n        region.id < neighborId\n          ? `${region.id};${neighborId}`\n          : `${neighborId};${region.id}`;\n      if (!alreadyDrawnConnection.has(connectionId)) {\n        alreadyDrawnConnection.add(connectionId);\n        const otherRegion = getRegion(continent, neighborId);\n        const isAnotherIsland = region.islandId !== otherRegion.islandId;\n\n        ctx.setLineDash(isAnotherIsland ? [3, 6] : []);\n        ctx.beginPath();\n        ctx.moveTo(region.centerPoint.x, region.centerPoint.y);\n        ctx.lineTo(otherRegion.centerPoint.x, otherRegion.centerPoint.y);\n        ctx.closePath();\n        ctx.stroke();\n      }\n    });\n  });\n\n  ctx.setLineDash([]);\n}\n\nfunction drawRegionIds(ctx, continent) {\n  ctx.font = 'bold 36px sans-serif';\n  ctx.shadowColor = '#fff';\n  ctx.shadowOffsetX = 0;\n  ctx.shadowOffsetY = 0;\n  ctx.shadowBlur = 4;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = '#666';\n\n  continent.regions.forEach(({ centerPoint: { x, y } }, i) => {\n    ctx.fillText(`${i}`, x, y);\n  });\n}\n\nfunction drawBoundingBoxes(ctx, { regions }) {\n  ctx.strokeStyle = REGION_BBOX_STROKE;\n  regions.forEach(({ bBox }) => {\n    ctx.beginPath();\n    ctx.rect(bBox.left, bBox.top, bBox.width, bBox.height);\n    ctx.stroke();\n  });\n}\n\nexport default function draw({ ctx, icf, ...cfg }) {\n  clearCanvas(ctx);\n  if (cfg.drawRegionBoundingBoxes) {\n    drawBoundingBoxes(ctx, icf);\n  }\n  drawRegions(ctx, icf, cfg.drawRegionBasePaths);\n  if (cfg.drawRegionsBase) {\n    drawRegionsBase(ctx, icf);\n  }\n  if (cfg.drawRegionConnections) {\n    drawRegionsConnections(ctx, icf);\n  }\n  if (cfg.drawRegionIds) {\n    drawRegionIds(ctx, icf);\n  }\n}\n","import { build, startBroadcasting } from \"./kiwotigo.mjs\";\nimport draw from \"./kiwotigo-painter.mjs\";\n\nconst canvas = document.getElementById(\"kiwotigoCanvas\");\nconst canvasCtx = canvas.getContext(\"2d\");\n\nconst loadingMessages = [\n  \"I will now create a new world just for you ...\",\n  \"Such a thing can take a while, though ...\",\n  \"... each country must be carefully considered ...\",\n  \"Hold on, it can't be much longer ...\",\n  \"I'm almost finished, there's just a few final touches ...\",\n];\n\nconst displayLoadingInfo = (html) => {\n  document.querySelector(\".loadingModal-info\").innerHTML = html;\n};\n\nlet currentLoadingMessageIdx = 0;\nlet displayNextLoadingMessageHandle = 0;\n\nconst showLoadingState = () => {\n  displayLoadingInfo(loadingMessages[0]);\n  currentLoadingMessageIdx = 1;\n  document.querySelector(\".loadingModal\").classList.add(\"loading\");\n  clearInterval(displayNextLoadingMessageHandle);\n  displayNextLoadingMessageHandle = setInterval(() => {\n    displayLoadingInfo(loadingMessages[currentLoadingMessageIdx]);\n    currentLoadingMessageIdx =\n      (currentLoadingMessageIdx + 1) % loadingMessages.length;\n  }, 5000);\n};\n\nconst displayProgress = (progress) => {\n  const maxWidth = document\n    .querySelector(\".loadingModal-content\")\n    .getBoundingClientRect().width;\n  const el = document.querySelector(\".loadingModal-progress\");\n  el.style.width = `${Math.round(progress * maxWidth)}px`;\n};\n\nconst hideLoadingState = () => {\n  clearInterval(displayNextLoadingMessageHandle);\n  displayProgress(1);\n  setTimeout(() => {\n    document.querySelector(\".loadingModal\").classList.remove(\"loading\");\n  }, 500);\n};\n\nconst getUpdateToggleAction = () =>\n  document.querySelector(\".kiwotigo-form-justUpdate\");\n\nconst getMapLegendOptions = () => {\n  const legendOptions = {};\n  Array.from(\n    document.querySelectorAll(\".mapLegendContainer input[type=checkbox]\")\n  ).forEach((checkbox) => {\n    legendOptions[checkbox.name] = checkbox.checked;\n  });\n  return legendOptions;\n};\n\nconst drawContinent = (() => {\n  let drawOptions;\n\n  return (options) => {\n    drawOptions = { ...drawOptions, ...options, ...getMapLegendOptions() };\n    draw(drawOptions);\n  };\n})();\n\nconst onCreate = (config) => {\n  showLoadingState();\n\n  build(config, displayProgress).then((data) => {\n    console.log(\"received new build\", data);\n    hideLoadingState();\n    getUpdateToggleAction().disabled = false;\n    document.querySelector(\".mapLegendContainer\").style.display = \"block\";\n\n    canvas.width = data.continent.canvasWidth;\n    canvas.height = data.continent.canvasHeight;\n    // const DPR = window.devicePixelRatio || 1;\n    // if (DPR !== 1) {\n    //   canvas.style.width = `${Math.round(canvas.width / DPR)}px`;\n    //   canvas.style.height = `${Math.round(canvas.height / DPR)}px`;\n    // }\n    drawContinent({ ctx: canvasCtx, icf: data.continent });\n  });\n};\n\nconst getConfig = () => {\n  const { elements: formElements } = document.forms.kiwotigo;\n  return [\n    \"gridWidth\",\n    \"gridHeight\",\n    \"gridOuterPaddingX\",\n    \"gridOuterPaddingY\",\n    \"gridInnerPaddingX\",\n    \"gridInnerPaddingY\",\n    \"gridHexWidth\",\n    \"gridHexHeight\",\n    \"hexWidth\",\n    \"hexHeight\",\n    \"hexPaddingX\",\n    \"hexPaddingY\",\n    \"minimalGrowIterations\",\n    \"fastGrowIterations\",\n    \"maxRegionSizeFactor\",\n    \"probabilityCreateRegionAt\",\n    // \"enableExtendedConnections\",\n    \"maxExtendedOuterRangeFactor\",\n    \"canvasMargin\",\n  ].reduce((c, key) => ({ ...c, [key]: parseFloat(formElements[key].value) }), {\n    // swapXY: true,\n  });\n};\n\nconst getKiwotigoOriginData = () => localStorage.getItem(\"kiwotigoOriginData\");\n\ndocument.forms.kiwotigo.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  if (getUpdateToggleAction().checked) {\n    onCreate({ ...getConfig(), originData: getKiwotigoOriginData() });\n  } else {\n    onCreate(getConfig());\n  }\n\n  document.querySelector(\".kiwotigo-createContinentBtn\").blur();\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const originData = getKiwotigoOriginData();\n  if (originData) {\n    getUpdateToggleAction().disabled = false;\n    const originConfig = JSON.parse(originData).config;\n    onCreate({ ...originConfig, originData });\n    Array.from(Object.entries(originConfig)).forEach(([key, value]) => {\n      const el = document.querySelector(`.kiwotigo-form input[name=${key}]`);\n      if (el) {\n        el.value = value;\n      }\n    });\n  } else {\n    getUpdateToggleAction().disabled = true;\n    document.querySelector(\".mapLegendContainer\").style.display = \"none\";\n  }\n});\n\ndocument.querySelector(\".openCloseAction\").addEventListener(\"pointerup\", () => {\n  document.querySelector(\".createContinentConfig\").classList.toggle(\"opened\");\n});\n\ngetUpdateToggleAction().addEventListener(\"change\", () => {\n  const { checked } = getUpdateToggleAction();\n  Array.from(\n    document.querySelectorAll(\".kiwotigo-form .create-only input\")\n  ).forEach((el) => {\n    el.disabled = checked;\n  });\n  document\n    .querySelector(\".kiwotigo-form\")\n    .classList[checked ? \"add\" : \"remove\"](\"just-update\");\n});\n\ndocument.querySelector(\".mapLegendContainer\").addEventListener(\"change\", () => {\n  console.debug(\"legend options\", getMapLegendOptions());\n  drawContinent(getMapLegendOptions());\n});\n\ndocument.body.addEventListener(\"pointerup\", (event) => {\n  const el = event.target;\n  if (el.tagName === \"LABEL\") {\n    const labelTarget = el.getAttribute(\"for\");\n    const targetInput = document.querySelector(`input[name=${labelTarget}]`);\n    if (targetInput && targetInput.type === \"checkbox\") {\n      targetInput.click();\n    }\n  }\n});\n\nstartBroadcasting();\n"],"names":["worker","lastBuild","publishChannel","lastId","tmpResolvers","Map","createMessageId","toString","getWorker","Worker","onmessage","data","id","type","resolve","get","onProgressFn","progress","originData","localStorage","setItem","JSON","stringify","postMessage","console","warn","drawPath","ctx","regions","pathName","stroke","forEach","region","path","beginPath","moveTo","len","length","i","lineTo","closePath","fill","draw","icf","cfg","clearRect","canvas","width","height","clearCanvas","drawRegionBoundingBoxes","strokeStyle","bBox","rect","left","top","drawBoundingBoxes","continent","drawBasePath","lineWidth","fillStyle","drawRegions","drawRegionBasePaths","drawRegionsBase","cp","centerPoint","setLineDash","arc","x","y","iR","Math","PI","oR","drawRegionConnections","alreadyDrawnConnection","Set","neighbors","neighborId","connectionId","has","add","otherRegion","regionIdx","getRegion","isAnotherIsland","islandId","drawRegionsConnections","drawRegionIds","font","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textAlign","textBaseline","fillText","drawOptions","document","getElementById","canvasCtx","getContext","loadingMessages","displayLoadingInfo","html","querySelector","innerHTML","currentLoadingMessageIdx","displayNextLoadingMessageHandle","displayProgress","maxWidth","getBoundingClientRect","style","round","getUpdateToggleAction","getMapLegendOptions","legendOptions","Array","from","querySelectorAll","checkbox","name","checked","drawContinent","options","onCreate","config","classList","clearInterval","setInterval","Promise","set","build","then","log","setTimeout","remove","disabled","display","canvasWidth","canvasHeight","getConfig","formElements","forms","kiwotigo","elements","reduce","c","key","parseFloat","value","getKiwotigoOriginData","getItem","addEventListener","event","preventDefault","blur","originConfig","parse","Object","entries","el","toggle","debug","body","target","tagName","labelTarget","getAttribute","targetInput","click","BroadcastChannel"],"mappings":"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"}